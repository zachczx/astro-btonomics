---
import type { GetStaticPaths } from 'astro'
import Layout from '../../layouts/Layout.astro'
import MaterialCalendarMonthOutline from '../../components/svg/MaterialCalendarMonthOutline.astro'
import MaterialSubject from '../../components/svg/MaterialSubject.astro'
import FormattedDate from '../../components/FormattedDate.astro'
import { getCollection, render } from 'astro:content'
import { Image } from 'astro:assets'
import headerImage from '../../images/36_upload_IMG_20180730_204953_header.jpg'
import headerImage0 from '../../images/3_concept1_header-topaz-enhance-4x.webp'
import { GetPid, GetUniqueTags } from '../../lib/utils'

async function CleanAndSort(category = '') {
    let posts
    if (category) {
        posts = await getCollection('blog', ({ data }) => {
            return data.category === category
        })
    } else {
        posts = await getCollection('blog')
    }

    posts.forEach((entry) => {
        entry.data.category = entry.data.category.toLowerCase().replace(' ', '-')
    })

    posts.sort((a, b) => a.data.pid - b.data.pid)

    return posts
}

const allPosts = await CleanAndSort()
const tagsList = await GetUniqueTags(allPosts)

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
    const blogEntriesUnsorted = await getCollection('blog')
    const blogEntries = blogEntriesUnsorted.sort((a, b) => a.data.category - b.data.category)
    const tagsList = await GetUniqueTags(blogEntries)
    console.log('Tagslist: ', tagsList)

    return tagsList.map((tag) => {
        // console.log('Tag: ', tag)
        const filtered = blogEntries.filter((filtered) => {
            return filtered.data.tags?.includes(tag)
        })
        // for (let i = 0; i < filtered.length; i++) {
        //     console.log('Filtered: ', filtered[i].data.slug)
        // }
        return { params: { tag }, props: { filtered: filtered } }
    })
}
// 2. For your template, you can get the entry directly from the prop
const { filtered } = Astro.props
const { tag } = Astro.params
---

<Layout title="Home">
    <aside data-pagefind-ignore>
        <nav class="flex flex-wrap items-center justify-start pt-8 text-base">
            <div class="flex min-w-32">
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="1.5em"
                    height="1.5em"
                    class="material-symbols:category-outline me-2 inline"
                    viewBox="0 0 24 24"
                    ><path
                        fill="currentColor"
                        d="M6.5 11L12 2l5.5 9zm11 11q-1.875 0-3.187-1.312T13 17.5t1.313-3.187T17.5 13t3.188 1.313T22 17.5t-1.312 3.188T17.5 22M3 21.5v-8h8v8zM17.5 20q1.05 0 1.775-.725T20 17.5t-.725-1.775T17.5 15t-1.775.725T15 17.5t.725 1.775T17.5 20M5 19.5h4v-4H5zM10.05 9h3.9L12 5.85zm7.45 8.5"
                    ></path></svg
                ><span>Category</span>
            </div>

            <a
                href="#honest-reviews"
                class="btn btn-outline btn-sm me-2 rounded-none border-primary text-base text-primary hover:border-accent hover:bg-transparent hover:text-accent"
                >Honest Reviews</a
            >
            <a
                href="#shopping"
                class="btn btn-outline btn-sm m-2 rounded-none border-primary text-base text-primary hover:border-accent hover:bg-transparent hover:text-accent"
                >Shopping</a
            >
            <a
                href="#renovation"
                class="btn btn-outline btn-sm m-2 rounded-none border-primary text-base text-primary hover:border-accent hover:bg-transparent hover:text-accent"
                >Renovation</a
            >
            <a
                href="#maintenance"
                class="btn btn-outline btn-sm m-2 rounded-none border-primary text-base text-primary hover:border-accent hover:bg-transparent hover:text-accent"
                >Maintenance</a
            >
            <a
                href="#general"
                class="btn btn-outline btn-sm m-2 rounded-none border-primary text-base text-primary hover:border-accent hover:bg-transparent hover:text-accent"
                >General</a
            >
        </nav>
        <nav class="mt-4 flex items-center">
            <div class="flex min-w-32">
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="1.5em"
                    height="1.5em"
                    class="prime:tags me-2 inline"
                    viewBox="0 0 24 24"
                    ><path
                        fill="currentColor"
                        d="m21.07 10.3l-6-6a.75.75 0 0 0-.53-.22H3c-.41 0-.75.34-.75.75v7.88c0 .2.08.39.22.53l6 5.99a2.3 2.3 0 0 0 1.64.68c.62 0 1.21-.24 1.64-.68l.22-.22c.04.08.08.16.15.22a2.326 2.326 0 0 0 3.29 0l5.65-5.65c.9-.9.9-2.37 0-3.28ZM10.7 18.17c-.16.16-.36.24-.58.24s-.43-.09-.58-.24L3.75 12.4V5.58h6.82l5.78 5.78c.32.32.32.84 0 1.16zm9.31-5.65l-5.65 5.65c-.32.32-.85.32-1.17 0a.7.7 0 0 0-.23-.15l4.44-4.44c.9-.91.9-2.38 0-3.28l-4.72-4.72h1.54L20 11.36c.32.32.32.84 0 1.16ZM8.25 8.5a1.25 1.25 0 1 1-2.5 0a1.25 1.25 0 0 1 2.5 0"
                    ></path></svg
                >
                <span>Tags</span>
            </div>
            <div class="flex grow flex-wrap items-center text-sm">
                {
                    tagsList.map((tag) => (
                        <a
                            href={'/tag/' + tag}
                            class="me-2 mt-1 border border-base-content/80 px-2 hover:border-accent hover:text-accent"
                        >
                            {tag}
                        </a>
                    ))
                }
            </div>
        </nav>

        <main class="flex justify-center pt-8">
            <div class="grid gap-14 md:grid-cols-2">
                <div
                    class={filtered.filter((entry) => entry.data.category === 'Honest Reviews')
                        .length > 0
                        ? 'col-span-2'
                        : 'hidden'}
                    id="honest-reviews"
                >
                    <h2 class="py-2">
                        <a href="/honest-reviews" class="hover:text-accent">Honest Reviews</a>
                    </h2>
                    <div
                        class="grid gap-12 border-2 border-base-content p-4 hover:bg-black/30 md:grid-cols-2 lg:p-8"
                    >
                        {
                            filtered
                                .filter((entry) => entry.data.category === 'Honest Reviews')
                                .map((entry) => (
                                    <div class="">
                                        <a href={entry.data.category + '/' + entry.data.slug}>
                                            <h3 class="title text-primary underline hover:text-accent group-hover:text-base-100">
                                                {entry.data.title}
                                            </h3>
                                            <div class="mt-2 flex items-center stroke-base-content text-sm text-base-content/80 group-hover:text-base-100">
                                                <MaterialCalendarMonthOutline class="mb-1 me-1" />
                                                <FormattedDate date={entry.data.pubDate} />
                                            </div>
                                            <div class="mt-1 flex items-center stroke-base-content text-sm text-base-content/80 group-hover:text-base-100">
                                                {entry.data.tags.map((tag) => (
                                                    <span class="me-2 border border-base-content/80 px-2">
                                                        {tag}
                                                    </span>
                                                ))}
                                            </div>
                                        </a>
                                    </div>
                                ))
                        }
                    </div>
                </div>

                <div
                    class={filtered.filter((entry) => entry.data.category === 'Shopping').length > 0
                        ? 'col-span-2'
                        : 'hidden'}
                    id="shopping"
                >
                    <h2 class="py-2"><a href="/shopping" class="hover:text-accent">Shopping</a></h2>
                    <div
                        class="grid gap-12 border-2 border-base-content p-4 hover:bg-black/30 md:grid-cols-2 lg:p-8"
                    >
                        {
                            filtered
                                .filter((entry) => entry.data.category === 'Shopping')
                                .map((entry) => (
                                    <div>
                                        <a href={entry.data.category + '/' + entry.data.slug}>
                                            <h3 class="title text-primary underline hover:text-accent group-hover:text-base-100">
                                                {entry.data.title}
                                            </h3>
                                            <div class="mt-2 flex items-center stroke-base-content text-sm text-base-content/80 group-hover:text-base-100">
                                                <MaterialCalendarMonthOutline class="mb-1 me-1" />
                                                <FormattedDate date={entry.data.pubDate} />
                                            </div>
                                            <div class="mt-1 flex items-center stroke-base-content text-sm text-base-content/80 group-hover:text-base-100">
                                                {entry.data.tags.map((tag) => (
                                                    <span class="me-2 border border-base-content/80 px-2">
                                                        {tag}
                                                    </span>
                                                ))}
                                            </div>
                                        </a>
                                    </div>
                                ))
                        }
                    </div>
                </div>
                <div
                    class={filtered.filter((entry) => entry.data.category === 'Renovation').length >
                    0
                        ? 'col-span-2'
                        : 'hidden'}
                    id="renovation"
                >
                    <h2 class="py-2">
                        <a href="/renovation" class="hover:text-accent">Renovation</a>
                    </h2>
                    <div
                        class="grid gap-12 border-2 border-base-content p-4 hover:bg-black/30 md:grid-cols-2 lg:p-8"
                    >
                        {
                            filtered
                                .filter((entry) => entry.data.category === 'Renovation')
                                .map((entry) => (
                                    <div class="">
                                        <a href={entry.data.category + '/' + entry.data.slug}>
                                            <h3 class="title text-primary underline hover:text-accent group-hover:text-base-100">
                                                {entry.data.title}
                                            </h3>
                                            <div class="mt-2 flex items-center stroke-base-content text-sm text-base-content/80 group-hover:text-base-100">
                                                <MaterialCalendarMonthOutline class="mb-1 me-1" />
                                                <FormattedDate date={entry.data.pubDate} />
                                            </div>
                                            <div class="mt-1 flex items-center stroke-base-content text-sm text-base-content/80 group-hover:text-base-100">
                                                {entry.data.tags.map((tag) => (
                                                    <span class="me-2 border border-base-content/80 px-2">
                                                        {tag}
                                                    </span>
                                                ))}
                                            </div>
                                        </a>
                                    </div>
                                ))
                        }
                    </div>
                </div>
                <div
                    class={filtered.filter((entry) => entry.data.category === 'Maintenance')
                        .length > 0
                        ? 'col-span-2'
                        : 'hidden'}
                    id="maintenance"
                >
                    <h2 class="py-2">
                        <a href="/maintenance" class="hover:text-accent">Maintenance</a>
                    </h2>
                    <div
                        class="grid gap-12 border-2 border-base-content p-4 hover:bg-black/30 md:grid-cols-2 lg:p-8"
                    >
                        {
                            filtered
                                .filter((entry) => entry.data.category === 'Maintenance')
                                .map((entry) => (
                                    <div class="">
                                        <a href={entry.data.category + '/' + entry.data.slug}>
                                            <h3 class="title text-primary underline hover:text-accent group-hover:text-base-100">
                                                {entry.data.title}
                                            </h3>
                                            <div class="mt-2 flex items-center stroke-base-content text-sm text-base-content/80 group-hover:text-base-100">
                                                <MaterialCalendarMonthOutline class="mb-1 me-1" />
                                                <FormattedDate date={entry.data.pubDate} />
                                            </div>
                                            <div class="mt-1 flex items-center stroke-base-content text-sm text-base-content/80 group-hover:text-base-100">
                                                {entry.data.tags.map((tag) => (
                                                    <span class="me-2 border border-base-content/80 px-2">
                                                        {tag}
                                                    </span>
                                                ))}
                                            </div>
                                        </a>
                                    </div>
                                ))
                        }
                    </div>
                </div>
                <div
                    class={filtered.filter((entry) => entry.data.category === 'General').length > 0
                        ? 'col-span-2'
                        : 'hidden'}
                    id="general"
                >
                    <h2 class="py-2"><a href="/general" class="hover:text-accent">General</a></h2>
                    <div
                        class="grid gap-12 border-2 border-base-content p-4 hover:bg-black/30 md:grid-cols-2 lg:p-8"
                    >
                        {
                            filtered
                                .filter((entry) => entry.data.category === 'General')
                                .map((entry) => (
                                    <div class="">
                                        <a href={entry.data.category + '/' + entry.data.slug}>
                                            <h3 class="title text-primary underline hover:text-accent group-hover:text-base-100">
                                                {entry.data.title}
                                            </h3>
                                            <div class="mt-2 flex items-center stroke-base-content text-sm text-base-content/80 group-hover:text-base-100">
                                                <MaterialCalendarMonthOutline class="mb-1 me-1" />
                                                <FormattedDate date={entry.data.pubDate} />
                                            </div>
                                            <div class="mt-1 flex items-center stroke-base-content text-sm text-base-content/80 group-hover:text-base-100">
                                                {entry.data.tags.map((tag) => (
                                                    <span class="me-2 border border-base-content/80 px-2">
                                                        {tag}
                                                    </span>
                                                ))}
                                            </div>
                                        </a>
                                    </div>
                                ))
                        }
                    </div>
                </div>
            </div>
        </main>

        <style>
            .backgroundGradient {
                background-image: radial-gradient(
                    circle,
                    #e9ffc2,
                    #caffed,
                    #d4ffff,
                    #f1ffff,
                    #ffffff
                );
                background-repeat: no-repeat;
                background-attachment: fixed;
            }
        </style>
    </aside>
</Layout>
